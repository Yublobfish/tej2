{"version":3,"sources":["../src/utils/object.ts"],"sourcesContent":["/* c8 ignore start */\n\nimport { BehaviorSubject } from \"rxjs\";\n\nexport function bs<T>(init: T) {\n  return new BehaviorSubject<T>(init);\n}\n\nexport function bsu<T>(init: T | undefined = undefined) {\n  return new BehaviorSubject<T | undefined>(init);\n}\n\nexport function deepEqual(obj1: any, obj2: any) {\n  if (obj1 === obj2)\n    // it's just the same object. No need to compare.\n    return true;\n\n  if (isPrimitive(obj1) && isPrimitive(obj2))\n    // compare primitives\n    return obj1 === obj2;\n\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;\n\n  // compare objects with same number of keys\n  for (let key in obj1) {\n    if (!(key in obj2)) return false; //other object doesn't have this prop\n    if (!deepEqual(obj1[key], obj2[key])) return false;\n  }\n\n  return true;\n}\n\n//check if value is primitive\nfunction isPrimitive(obj: any) {\n  return obj !== Object(obj);\n}\n"],"mappings":";AAEA,SAAS,uBAAuB;AAEzB,SAAS,GAAM,MAAS;AAC7B,SAAO,IAAI,gBAAmB,IAAI;AACpC;AAEO,SAAS,IAAO,OAAsB,QAAW;AACtD,SAAO,IAAI,gBAA+B,IAAI;AAChD;AAEO,SAAS,UAAU,MAAW,MAAW;AAC9C,MAAI,SAAS;AAEX,WAAO;AAET,MAAI,YAAY,IAAI,KAAK,YAAY,IAAI;AAEvC,WAAO,SAAS;AAElB,MAAI,OAAO,KAAK,IAAI,EAAE,WAAW,OAAO,KAAK,IAAI,EAAE;AAAQ,WAAO;AAGlE,WAAS,OAAO,MAAM;AACpB,QAAI,EAAE,OAAO;AAAO,aAAO;AAC3B,QAAI,CAAC,UAAU,KAAK,MAAM,KAAK,IAAI;AAAG,aAAO;AAAA,EAC/C;AAEA,SAAO;AACT;AAGA,SAAS,YAAY,KAAU;AAC7B,SAAO,QAAQ,OAAO,GAAG;AAC3B;","names":[]}