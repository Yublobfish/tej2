import { S as Step, T as TajribaProvider } from './provider-3e575146.js';
import { BehaviorSubject } from 'rxjs';
import { C as Constructor, G as Globals } from './globals-1dc2e2b1.js';
import { S as Scope } from './scopes-ad792f40.js';

declare class Game extends Scope<Context, EmpiricaClassicKinds> {
    get hasEnded(): boolean;
    get stage(): Stage | undefined;
    get round(): Round | undefined;
}
declare class Player extends Scope<Context, EmpiricaClassicKinds> {
    get game(): PlayerGame | undefined;
    get round(): PlayerRound | undefined;
    get stage(): PlayerStage | undefined;
    hasUpdated(): boolean;
}
declare class PlayerGame extends Scope<Context, EmpiricaClassicKinds> {
}
declare class PlayerRound extends Scope<Context, EmpiricaClassicKinds> {
}
declare class PlayerStage extends Scope<Context, EmpiricaClassicKinds> {
}
declare class Round extends Scope<Context, EmpiricaClassicKinds> {
}
declare class Stage extends Scope<Context, EmpiricaClassicKinds> {
    get round(): Round | undefined;
    get timer(): Step | undefined;
}
declare class Context {
    game?: Game;
    stage?: Stage;
}
declare type EmpiricaClassicKinds = {
    game: Constructor<Game>;
    player: Constructor<Player>;
    playerGame: Constructor<PlayerGame>;
    playerRound: Constructor<PlayerRound>;
    playerStage: Constructor<PlayerStage>;
    round: Constructor<Round>;
    stage: Constructor<Stage>;
};
declare type EmpiricaClassicContext = {
    game: BehaviorSubject<Game | undefined>;
    player: BehaviorSubject<Player | undefined>;
    players: BehaviorSubject<Player[]>;
    round: BehaviorSubject<Round | undefined>;
    stage: BehaviorSubject<Stage | undefined>;
    globals: BehaviorSubject<Globals>;
};
declare function EmpiricaClassic(participantID: string, provider: TajribaProvider): EmpiricaClassicContext;

export { EmpiricaClassic as E, Game as G, Player as P, Round as R, Stage as S, PlayerGame as a, PlayerRound as b, PlayerStage as c, EmpiricaClassicContext as d };
