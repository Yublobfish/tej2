{"version":3,"sources":["../src/player/classic/react/EmpiricaContext.tsx","../src/player/classic/react/hooks.ts","../src/player/classic/react/Lobby.tsx","../src/player/classic/react/Steps.tsx","../src/player/classic/react/examples/Sweeper.tsx","../src/player/classic/react/Quiz.tsx","../src/player/classic/react/Slider.tsx"],"sourcesContent":["import React from \"react\";\nimport { Consent, ConsentProps } from \"../../react/Consent\";\nimport { Finished } from \"../../react/Finished\";\nimport {\n  useConsent,\n  useGlobal,\n  usePartConnected,\n  usePlayerID,\n  useTajribaConnected,\n} from \"../../react/hooks\";\nimport { Loading } from \"../../react/Loading\";\nimport { NoGames } from \"../../react/NoGames\";\nimport { PlayerCreate, PlayerCreateProps } from \"../../react/PlayerCreate\";\nimport { useGame, usePlayer, useRound, useStage } from \"./hooks\";\nimport { Lobby as DefaultLobby } from \"./Lobby\";\nimport { Steps, StepsFunc } from \"./Steps\";\n\nexport interface EmpiricaContextProps {\n  children: React.ReactNode;\n  noGames?: React.ElementType;\n  consent?: React.ElementType<ConsentProps>;\n  playerCreate?: React.ElementType<PlayerCreateProps>;\n  lobby?: React.ElementType;\n  introSteps: React.ElementType[] | StepsFunc;\n  exitSteps: React.ElementType[] | StepsFunc;\n  finished?: React.ElementType;\n  loading?: React.ElementType;\n  connecting?: React.ElementType;\n\n  // An unmanaged game will render the children as soon as the Game is available\n  // whether the round or stage are available or not. It is up to the developer\n  // to handle the presence of the round and stage.\n  // Everything else is still managed: the consent, the player, the intro\n  // steps, the lobby, and the game.\n  // This is not recommended for most games.\n  // This is useful for games that want to persist render state between rounds\n  // or stages. E.g. keep a video chat up between stages.\n  unmanagedGame: boolean;\n\n  // Unmanaged assignement will render the children as soon as the player is\n  // connected. It is up to the developer to handle everything after the player\n  // is connected: intro steps, lobby, game, round, stage and exit steps.\n  unmanagedAssignment: boolean;\n\n  // Disable the consent screen. It is up to the developer to handle the consent\n  // screen.\n  disableConsent: boolean;\n\n  // Disable the NoGames screen. It is up to the developer to handle the NoGames\n  // condition.\n  disableNoGames: boolean;\n\n  // Disable capturing URL params (?what=hello&some=thing) onto the Player under\n  // the `urlParams` key.\n  disableURLParamsCapture: boolean;\n}\n\nexport function EmpiricaContext({\n  noGames: NoGamesComp = NoGames,\n  consent: ConsentComp = Consent,\n  playerCreate: PlayerCreateForm = PlayerCreate,\n  introSteps = [],\n  lobby = DefaultLobby,\n  exitSteps = [],\n  finished = Finished,\n  loading: LoadingComp = Loading,\n  connecting: ConnectingComp = Loading,\n  unmanagedGame = false,\n  unmanagedAssignment = false,\n  disableConsent = false,\n  disableNoGames = false,\n  disableURLParamsCapture = false,\n  children,\n}: EmpiricaContextProps) {\n  const tajribaConnected = useTajribaConnected();\n  const participantConnected = usePartConnected();\n  const globals = useGlobal();\n  const player = usePlayer();\n  const game = useGame();\n  const [connecting, hasPlayer, onPlayerID] = usePlayerID();\n  const [consented, onConsent] = useConsent();\n\n  if (!tajribaConnected) {\n    return <ConnectingComp />;\n  }\n\n  if (player && player.get(\"ended\")) {\n    return <Exit exitSteps={exitSteps} finished={finished} />;\n  }\n\n  // If globals not yet loaded or we are connected to participant but player\n  // hasn't loaded yet.\n  if (!globals || (participantConnected && !player)) {\n    return <LoadingComp />;\n  }\n\n  if (!disableNoGames && !game && !globals.get(\"experimentOpen\")) {\n    return <NoGamesComp />;\n  }\n\n  if (!disableConsent && !consented) {\n    return <ConsentComp onConsent={onConsent!} />;\n  }\n\n  if (!player && (!hasPlayer || connecting)) {\n    return (\n      <PlayerCreateForm onPlayerID={onPlayerID!} connecting={connecting} />\n    );\n  }\n\n  if (!player) {\n    return <LoadingComp />;\n  }\n\n  if (!disableURLParamsCapture && !player.get(\"urlParams\")) {\n    const urlParams = new URLSearchParams(window.location.search);\n    player.set(\"urlParams\", Object.fromEntries(urlParams.entries()));\n  }\n\n  if (unmanagedAssignment) {\n    return <>{children}</>;\n  }\n\n  if (game && game.hasEnded) {\n    return <Exit exitSteps={exitSteps} finished={finished} />;\n  }\n\n  return (\n    <Steps progressKey=\"intro\" doneKey=\"introDone\" steps={introSteps}>\n      <EmpiricaInnerContext\n        exitSteps={exitSteps}\n        lobby={lobby}\n        finished={finished}\n        loading={LoadingComp}\n        unmanagedGame={unmanagedGame}\n      >\n        {children}\n      </EmpiricaInnerContext>\n    </Steps>\n  );\n}\n\ninterface EmpiricaInnerContextProps {\n  children: React.ReactNode;\n  lobby: React.ElementType;\n  exitSteps: React.ElementType[] | StepsFunc;\n  finished: React.ElementType;\n  loading: React.ElementType;\n  unmanagedGame: boolean;\n}\n\nfunction EmpiricaInnerContext({\n  children,\n  lobby: Lobby,\n  finished,\n  exitSteps,\n  loading: LoadingComp,\n  unmanagedGame = false,\n}: EmpiricaInnerContextProps) {\n  const game = useGame();\n  const stage = useStage();\n  const round = useRound();\n\n  if (!game) {\n    return <Lobby />;\n  }\n\n  if (game.hasEnded) {\n    return <Exit exitSteps={exitSteps} finished={finished} />;\n  }\n\n  if (!unmanagedGame && (!stage || !round)) {\n    return <LoadingComp />;\n  }\n\n  return <>{children}</>;\n}\n\nfunction Exit({\n  exitSteps,\n  finished: Finished,\n}: {\n  exitSteps: React.ElementType[] | StepsFunc;\n  finished: React.ElementType;\n}) {\n  return (\n    <Steps progressKey=\"exitStep\" doneKey=\"exitStepDone\" steps={exitSteps}>\n      <Finished />\n    </Steps>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport { BehaviorSubject, Observable, Subscription } from \"rxjs\";\nimport { ParticipantModeContext } from \"../../context\";\nimport { useParticipantContext } from \"../../react/hooks\";\nimport type { StepTick } from \"../../steps\";\nimport { EmpiricaClassicContext, Game, Player, Round, Stage } from \"../classic\";\n\nexport function usePlayer() {\n  return usePartModeCtxKey<EmpiricaClassicContext, \"player\", Player>(\"player\");\n}\n\nexport function useGame() {\n  return usePartModeCtxKey<EmpiricaClassicContext, \"game\", Game>(\"game\");\n}\n\nexport function useRound() {\n  return usePartModeCtxKey<EmpiricaClassicContext, \"round\", Round>(\"round\");\n}\n\nexport function useStage() {\n  return usePartModeCtxKey<EmpiricaClassicContext, \"stage\", Stage>(\"stage\");\n}\n\nexport function useStageTimer() {\n  const stage = useStage();\n\n  const [val, setVal] = useState<{ tick: StepTick | undefined }>({\n    tick: stage?.timer?.current,\n  });\n\n  const timerSubscription = useRef<Subscription | null>(null);\n\n\n  useEffect(() => {\n    \n    if (!stage || !stage.timer) {\n      return;\n    }\n\n    if (timerSubscription.current === null) {\n      timerSubscription.current = stage.timer.obs().subscribe({\n          next(val) {\n            setVal({ tick: val });\n          },\n        });\n    }\n\n\n    return () => {\n      timerSubscription?.current?.unsubscribe.bind(timerSubscription.current);\n      timerSubscription.current = null;\n    }\n  }, [stage?.timer]);\n\n  return val.tick;\n}\n\nexport function usePlayers() {\n  return usePartModeCtxKey<EmpiricaClassicContext, \"players\", Player[]>(\n    \"players\"\n  );\n}\n\nexport function usePartModeCtx<M>() {\n  const ctx = useParticipantContext() as ParticipantModeContext<M>;\n  const [mode, setMode] = useState<{ data: M | undefined }>({\n    data: ctx?.mode?.getValue(),\n  });\n\n  useEffect(() => {\n    if (!ctx || !ctx.mode) {\n      return;\n    }\n\n    const sub = ctx.mode.subscribe({\n      next(m) {\n        setMode({ data: m });\n      },\n    });\n\n    return sub.unsubscribe.bind(sub);\n  }, [ctx]);\n\n  return mode.data;\n}\n\nexport function usePartModeCtxKey<M, K extends keyof M, R>(\n  name: K\n): R | undefined {\n  const mode = usePartModeCtx<M>();\n  const iniVal =\n    mode &&\n    ((<unknown>mode[name]) as BehaviorSubject<R | undefined> | undefined);\n  const [val, setVal] = useState<{ data: R | undefined }>({\n    data: iniVal?.getValue(),\n  });\n\n  useEffect(() => {\n    if (!mode) {\n      return;\n    }\n\n    const obs = (<unknown>mode[name]) as Observable<R>;\n\n    const sub = obs.subscribe({\n      next(val) {\n        setVal({ data: val });\n      },\n    });\n\n    return sub.unsubscribe.bind(sub);\n  }, [mode]);\n\n  return val.data;\n}\n","import React from \"react\";\nimport { warn } from \"../../../utils/console\";\nimport { Loading } from \"../../react/Loading\";\nimport { usePlayer } from \"./hooks\";\n\nexport function Lobby() {\n  const player = usePlayer();\n\n  if (!player) {\n    return <Loading />;\n  }\n\n  const treatment = player.get(\"treatment\") as { playerCount: number };\n\n  if (!treatment || !treatment.playerCount) {\n    warn(\"lobby: no treatment found on player\");\n\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"flex h-full items-center justify-center\">\n      <div className=\"text-center\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 640 512\"\n          className=\"mx-auto h-12 w-12 text-gray-400\"\n          stroke=\"none\"\n          fill=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          <path d=\"M544 224c44.2 0 80-35.8 80-80s-35.8-80-80-80-80 35.8-80 80 35.8 80 80 80zm0-128c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zM320 256c61.9 0 112-50.1 112-112S381.9 32 320 32 208 82.1 208 144s50.1 112 112 112zm0-192c44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80 35.9-80 80-80zm244 192h-40c-15.2 0-29.3 4.8-41.1 12.9 9.4 6.4 17.9 13.9 25.4 22.4 4.9-2.1 10.2-3.3 15.7-3.3h40c24.2 0 44 21.5 44 48 0 8.8 7.2 16 16 16s16-7.2 16-16c0-44.1-34.1-80-76-80zM96 224c44.2 0 80-35.8 80-80s-35.8-80-80-80-80 35.8-80 80 35.8 80 80 80zm0-128c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm304.1 180c-33.4 0-41.7 12-80.1 12-38.4 0-46.7-12-80.1-12-36.3 0-71.6 16.2-92.3 46.9-12.4 18.4-19.6 40.5-19.6 64.3V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-44.8c0-23.8-7.2-45.9-19.6-64.3-20.7-30.7-56-46.9-92.3-46.9zM480 432c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16v-44.8c0-16.6 4.9-32.7 14.1-46.4 13.8-20.5 38.4-32.8 65.7-32.8 27.4 0 37.2 12 80.2 12s52.8-12 80.1-12c27.3 0 51.9 12.3 65.7 32.8 9.2 13.7 14.1 29.8 14.1 46.4V432zM157.1 268.9c-11.9-8.1-26-12.9-41.1-12.9H76c-41.9 0-76 35.9-76 80 0 8.8 7.2 16 16 16s16-7.2 16-16c0-26.5 19.8-48 44-48h40c5.5 0 10.8 1.2 15.7 3.3 7.5-8.5 16.1-16 25.4-22.4z\" />\n        </svg>\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n          {treatment.playerCount > 1\n            ? \"Waiting for other players\"\n            : \"Game loading\"}\n        </h3>\n        <p className=\"mt-1 text-sm text-gray-500\">\n          Please wait for the game to be ready.\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { WithChildren } from \"../../react/helpers\";\nimport { Attributable } from \"../../../shared/scopes\";\nimport { Game, Player } from \"../classic\";\nimport { useGame, usePlayer } from \"./hooks\";\nimport { error } from \"../../../utils/console\";\n\nexport type StepsFunc = (props: {\n  game?: Game;\n  player?: Player;\n}) => React.ElementType[] | undefined;\n\nexport type StepsProps = WithChildren<{\n  steps: React.ElementType[] | StepsFunc;\n  progressKey: string;\n  doneKey: string;\n  object?: Attributable;\n}>;\n\nexport function Steps({\n  steps,\n  progressKey,\n  doneKey,\n  object,\n  children,\n}: StepsProps) {\n  let obj: Attributable;\n  const game = useGame();\n  const player = usePlayer();\n\n  // Find state receiver\n  if (object) {\n    obj = object;\n  } else if (player) {\n    obj = player;\n  } else {\n    error(\"no receiver and no player in Steps\");\n    return <div>Missing attribute</div>;\n  }\n\n  // Are we already done\n  if (obj.get(doneKey)) {\n    return <>{children}</>;\n  }\n\n  // Static steps\n  let actualSteps = steps as React.ElementType[];\n\n  // Dynamic steps\n  if (typeof steps === \"function\") {\n    actualSteps = steps({ game, player })!;\n    if (!actualSteps) {\n      obj.set(doneKey, true);\n\n      return <>{children}</>;\n    }\n  }\n\n  const index = (obj.get(progressKey) as number) || 0;\n  if (actualSteps.length === 0 || index >= actualSteps.length) {\n    obj.set(doneKey, true);\n\n    return <>{children}</>;\n  }\n\n  const Step = actualSteps[index];\n\n  if (!Step) {\n    error(\"missing step at index\");\n\n    return <div>Step missing</div>;\n  }\n\n  const next = () => {\n    if (index + 1 >= actualSteps.length) {\n      obj.set(doneKey, true);\n    } else {\n      obj.set(progressKey, index + 1);\n    }\n  };\n\n  const previous = () => {\n    if (index > 0) {\n      obj.set(progressKey, index - 1);\n    }\n  };\n\n  return <Step index={index} previous={previous} next={next}></Step>;\n}\n","import React, { useEffect } from \"react\";\nimport { usePlayer, useRound } from \"../hooks\";\n\nconst buttonStyle = {\n  width: 40,\n  height: 40,\n  backgroundColor: \"#888\",\n  color: \"black\",\n  verticalAlign: \"top\",\n  fontSize: \"32px\",\n  borderLeft: \"5px solid rgb(220,220,220)\",\n  borderTop: \"5px solid rgb(220,220,220)\",\n  borderBottom: \"5px solid #333\",\n  borderRight: \"5px solid #333\",\n  display: \"inline-block\",\n};\n\nconst visitStyle = {\n  width: 40,\n  height: 40,\n  itemsAlign: \"center\",\n  backgroundColor: \"#555\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  border: \"1px solid black\",\n  verticalAlign: \"top\",\n  fontSize: \"24px\",\n  display: \"inline-block\",\n};\n\ntype cell = number | string;\ntype row = [cell, cell, cell, cell, cell, cell, cell, cell, cell, cell];\ntype grid = [row, row, row, row, row, row, row, row, row, row];\n\nexport function Sweeper() {\n  const round = useRound();\n  if (!round) {\n    return null;\n  }\n  const player = usePlayer();\n  if (!player) {\n    return null;\n  }\n\n  const visited = round.get(\"visited\") as Array<Array<number>>;\n  const bombs = round.get(\"bombs\") as Array<Array<number | \"X\">>;\n  const lost = round.get(\"lost\") as boolean;\n\n  useEffect(function () {\n    generateBombs();\n  }, []);\n\n  function generateBombs() {\n    if (bombs || !round) {\n      return;\n    }\n\n    let bombArr = new Array(10)\n      .fill(0)\n      .map(() => new Array(10).fill(0)) as grid;\n\n    for (let i = 0; i < bombArr.length; i++) {\n      let bombPos = Math.floor(Math.random() * 10);\n      bombArr[i]![bombPos] = \"X\";\n    }\n\n    for (let i = 0; i < bombArr.length; i++) {\n      for (let j = 0; j < bombArr[i]!.length; j++) {\n        if (bombArr[i]![j] !== \"X\") {\n          let sum = 0;\n\n          if (i > 0 && bombArr[i - 1]![j] == \"X\") sum++;\n          if (i < bombArr.length - 1 && bombArr[i + 1]![j] == \"X\") sum++;\n          if (j < bombArr.length - 1 && bombArr[i]![j + 1] == \"X\") sum++;\n          if (j > 0 && bombArr[i]![j - 1] == \"X\") sum++;\n          if (i < bombArr.length - 1 && j > 0 && bombArr[i + 1]![j - 1] == \"X\")\n            sum++;\n          if (\n            i < bombArr.length - 1 &&\n            j < bombArr.length - 1 &&\n            bombArr[i + 1]![j + 1] == \"X\"\n          )\n            sum++;\n          if (i > 0 && j > 0 && bombArr[i - 1]![j - 1] == \"X\") sum++;\n          if (i > 0 && j < bombArr.length - 1 && bombArr[i - 1]![j + 1] == \"X\")\n            sum++;\n\n          bombArr[i]![j] = sum;\n        }\n      }\n    }\n\n    round.set(\"bombs\", bombArr);\n\n    let cover = Array(10)\n      .fill(0)\n      .map(() => Array(10).fill(0));\n\n    round.set(\"visited\", cover);\n  }\n\n  const visitCell = (i: number, j: number) => {\n    if (lost || !bombs || !visited) {\n      return;\n    }\n\n    if (bombs[i]![j] === \"X\") {\n      round.set(\"lost\", true);\n    }\n\n    dfsCells(i, j);\n    visited[i]![j] = 1;\n    round.set(\"visited\", [...visited]);\n  };\n\n  function dfsCells(i: number, j: number) {\n    if (!round || !bombs || !visited) {\n      return;\n    }\n\n    if (\n      i < 0 ||\n      i > visited.length - 1 ||\n      j < 0 ||\n      j > visited[0]!.length - 1 ||\n      visited[i]![j] == 1 ||\n      bombs[i]![j] == \"X\"\n    )\n      return;\n\n    visited[i]![j] = 1;\n\n    round.set(\"visited\", [...visited]);\n    if (bombs[i]![j]! < 1) {\n      dfsCells(i + 1, j);\n      dfsCells(i - 1, j);\n      dfsCells(i, j + 1);\n      dfsCells(i, j - 1);\n    }\n  }\n\n  if (!bombs) {\n    return null;\n  }\n\n  return (\n    <div className=\"text-sm relative\">\n      {lost ? (\n        <>\n          <div className=\"absolute h-full w-full flex items-center justify-center text-6xl white font-black bg-opacity-50 bg-gray-300\">\n            YOU LOST\n          </div>\n          <div className=\"absolute h-full w-full flex items-center justify-center text-6xl white font-black mt-1 ml-1 text-white\">\n            YOU LOST\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {bombs.map((arr, index) => (\n        <div key={index}>\n          {arr.map((_, i) => (\n            <div\n              key={i}\n              onClick={() => visitCell(index, i)}\n              style={visited[index]![i] == 0 ? buttonStyle : visitStyle}\n            >\n              <div className=\"h-full w-full flex items-center justify-center\">\n                {visited[index]![i] == 0\n                  ? null\n                  : bombs[index]![i] == 0\n                  ? \"\"\n                  : bombs[index]![i]}\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { FormEvent, useState } from \"react\";\n\nexport function Quiz({ next }: { next: () => void }) {\n  const labelClassName = \"block text-sm font-medium text-gray-700 mb-2\";\n  const inputClassName =\n    \"appearance-none block px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-empirica-500 focus:border-empirica-500 sm:text-sm\";\n\n  const [sum, setSum] = useState(\"\");\n  const [horse, setHorse] = useState(\"\");\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault();\n\n    if (sum !== \"4\" || horse !== \"white\") {\n      alert(\"Incorrect! Read the instructions and please try again.\");\n    } else {\n      next();\n    }\n  }\n\n  return (\n    <div className=\"flex justify-center\">\n      <div className=\"mt-6 sm:mt-24\">\n        <h3 className=\"text-2xl font-semi-bold text-gray-900\">Quiz</h3>\n        <form className=\"mt-4\" onSubmit={handleSubmit}>\n          <p className=\"mb-5\">\n            <label className={labelClassName}>What is 2+2?</label>\n            <input\n              className={inputClassName}\n              type=\"text\"\n              dir=\"auto\"\n              id=\"sum\"\n              name=\"sum\"\n              placeholder=\"e.g. 3\"\n              value={sum}\n              onChange={(e) => setSum(e.target.value)}\n              autoComplete=\"off\"\n              autoFocus\n              required\n            />\n          </p>\n          <p className=\"mb-5\">\n            <label className={labelClassName}>\n              What color was Napoleon's white horse?\n            </label>\n            <input\n              className={inputClassName}\n              type=\"text\"\n              dir=\"auto\"\n              id=\"horse\"\n              name=\"horse\"\n              placeholder=\"brown\"\n              value={horse}\n              onChange={(e) => setHorse(e.target.value)}\n              autoComplete=\"off\"\n              required\n            />\n          </p>\n\n          <button\n            type=\"submit\"\n            className=\"inline-flex items-center px-4 py-2 border text-sm font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-empirica-500\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEventHandler, RefObject, useRef } from \"react\";\n\nexport interface SliderProps {\n  value: number;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  min?: number;\n  max?: number;\n  stepSize?: number;\n  disabled?: boolean;\n}\n\nexport function Slider({\n  value,\n  onChange,\n  min = 0,\n  max = 100,\n  stepSize = 1,\n  disabled = false,\n}: SliderProps) {\n  const noVal = value === null || value === undefined;\n  const val = noVal ? (max - min) / 2 : value;\n  const cls = noVal ? \"slider-thumb-zero\" : \"slider-thumb\";\n  const ref: RefObject<HTMLOutputElement> = useRef(null);\n\n  if (value !== null && ref.current) {\n    const nmin = min ? min : 0;\n    const nmax = max ? max : 100;\n    const newVal = Number(((value - nmin) * 100) / (nmax - nmin));\n\n    ref.current.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\n  }\n\n  return (\n    <div className=\"relative w-full\">\n      <input\n        className={cls}\n        type=\"range\"\n        min={min}\n        max={max}\n        step={stepSize}\n        value={val}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      {noVal ? (\n        \"\"\n      ) : (\n        <output\n          ref={ref}\n          className=\"font-mono absolute w-12 h-7 flex items-center justify-center left-1/2 bottom-7 rounded transform -translate-x-1/2 bg-gray-200\"\n        >\n          {value}\n        </output>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","names":["React","val","_a","React","React","React","Lobby","Finished","React","useEffect","useEffect","React","React","useState","React","useRef"]}